% . For a list of integer number, write a predicate to add in list after 1-st, 3-rd,
%  7-th, 15-th,... element a given value e.
% insert(L-list,I-iterator,P-power,E-elem,C-colector list,R-result list)
% flow model(i,i,i,i,o)

insert([],_,_,_,C,R):-reverse(C,R).
insert([H|T],I,P,E,C,R):-
    I =:= 2^P-1,
    NewI is I+1,
    NewP is P+1,
    insert(T,NewI,NewP,E,[E,H|NewC],R),
    C = NewC.
insert([H|T],I,P,E,C,R):-
    not(I =:= 2^P-1),
    NewI is I+1,
    insert(T,NewI,P,E,[H|NewC],R),
    C= NewC.

% For a heterogeneous list, formed from integer numbers and list of numbers; 
% add in every sublist after 1-st, 
%3-rd, 7-th, 15-th element the value found before the sublist in the heterogenous list. 
%The list has the particularity that starts with a number and there arenâ€™t 
%two consecutive elements lists.
%Eg.: [1, [2, 3], 7, [4, 1, 4], 3, 6, [7, 5, 1, 3, 9, 8, 2, 7], 5] =>
%[1, [2, 1, 3], 7, [4, 7, 1, 4, 7], 3, 6, [7, 6, 5, 1, 6, 3, 9, 8, 2, 6, 7], 5].

%insersub(L-list,E-elem,R-result)
%flow model (i,i,o)

insertsub([],_,[]).
insertsub([H|T],E,R):-
    	  atomic(H),
          NewE = H,
          insertsub(T,NewE,NewR),
          R=[H|NewR].
insertsub([H|T], E,R):-
    is_list(H),
    insertsub(T,E,NewR),
    insert(H,1,1,E,[],RS),
    R=[RS|NewR].
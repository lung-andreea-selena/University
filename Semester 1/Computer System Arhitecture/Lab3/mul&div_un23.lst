     1                                  bits 32 
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit 
     6                                  import exit msvcrt.dll  
     7                                  
     8                                  
     9                                  segment data use32 class=data
    10                                  ;(a*b-2*c*d)/(c-e)+x/a - signed rep
    11                                  ; a,b,c,d-byte; e-word; x-qword
    12                                  
    13 00000000 04                      a db 4
    14 00000001 05                      b db 5
    15 00000002 03                      c db 3
    16 00000003 02                      d db 2
    17 00000004 0100                    e dw 1
    18 00000006 0C00000000000000        x dq 12
    19 0000000E <res 00000004>          y resd 1;reserving a doubleword
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                  start:
    24                                      ;(a*b-2*c*d)
    25 00000000 B800000000                  mov eax,0
    26 00000005 A0[00000000]                mov al,[a]
    27 0000000A F625[01000000]              mul byte[b];ax=a*b
    28 00000010 66BA0000                    mov dx,0;ax->dx:ax
    29 00000014 6652                        push dx
    30 00000016 6650                        push ax
    31 00000018 58                          pop eax
    32 00000019 A3[0E000000]                mov[y],eax
    33                                      ;
    34 0000001E B800000000                  mov eax,0
    35 00000023 A0[02000000]                mov al,[c]
    36 00000028 F625[03000000]              mul byte[d];ax=c*d
    37 0000002E BB00000000                  mov ebx,0
    38 00000033 66BB0200                    mov bx,2
    39 00000037 66F7E3                      mul bx;dx:ax=2*c*d
    40 0000003A 6652                        push dx
    41 0000003C 6650                        push ax
    42 0000003E 58                          pop eax
    43 0000003F 2905[0E000000]              sub[y],eax
    44                                      ;(c-e)
    45 00000045 B800000000                  mov eax,0
    46 0000004A A0[02000000]                mov al,[c]
    47 0000004F B400                        mov ah,0;al->ax
    48 00000051 662B05[04000000]            sub ax,[e]
    49                                      ;(a*b-2*c*d)/(c-e)
    50 00000058 BB00000000                  mov ebx,0
    51 0000005D 6689C3                      mov bx,ax
    52 00000060 A1[0E000000]                mov eax,[y]
    53 00000065 66F7F3                      div bx;ax catul, dx restul
    54 00000068 66BA0000                    mov dx,0;ax->dx:ax
    55 0000006C 6652                        push dx
    56 0000006E 6650                        push ax
    57 00000070 58                          pop eax
    58 00000071 A3[0E000000]                mov[y],eax
    59                                      ;+x/a
    60 00000076 B800000000                  mov eax,0
    61 0000007B A0[00000000]                mov al,[a]
    62 00000080 B400                        mov ah,0;al->ax
    63 00000082 66BA0000                    mov dx,0;ax->dx:ax
    64 00000086 6652                        push dx
    65 00000088 6650                        push ax
    66 0000008A 58                          pop eax
    67 0000008B 89C3                        mov ebx,eax
    68 0000008D A1[06000000]                mov eax,dword[x]
    69 00000092 8B15[0A000000]              mov edx,dword[x+4]
    70 00000098 F7F3                        div ebx;eax catul
    71 0000009A 0105[0E000000]              add[y],eax
    72                                      
    73 000000A0 6A00                        push dword 0 
    74 000000A2 FF15[00000000]              call [exit]
